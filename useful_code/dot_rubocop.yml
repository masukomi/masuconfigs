Layout/AccessModifierIndentation:
  Enabled: true

Layout/HashAlignment:
  Enabled: true
  EnforcedColonStyle: key
  EnforcedLastArgumentHashStyle: always_inspect

Layout/ParameterAlignment:
  Enabled: true
  EnforcedStyle: with_first_parameter

Layout/BlockAlignment:
  Enabled: true
  EnforcedStyleAlignWith: start_of_block

Layout/CaseIndentation:
  Enabled: true

Layout/ClosingParenthesisIndentation:
  Enabled: true

Layout/DotPosition:
  EnforcedStyle: leading

Layout/EmptyLineBetweenDefs:
  Enabled: true

Layout/EmptyLines:
  Enabled: true

Layout/EmptyLineAfterGuardClause:
  Enabled: false

Layout/EmptyLinesAroundAccessModifier:
  Enabled: true

Layout/EmptyLinesAroundBlockBody:
  Enabled: true

# Note(maxh): Not sure about this one given we already have EmptyLines above.
Layout/EmptyLinesAroundClassBody:
  Enabled: true

# Why AllowForAlignment: false?
# 1) Cleaner diffs. For example, when you add a longer key to a hash,
#    you need to update all the other rows to maintain alignment. This
#    means your diffs become harder to read. It looks like more is changing
#    than actually is.
# 2) Better to have one way to do things than two.
# 3) You can still use rubocop:disable comments in exceptional cases.
Layout/ExtraSpacing:
  Enabled: true
  AllowForAlignment: false

Layout/FirstArrayElementLineBreak:
  Enabled: true

Layout/FirstHashElementLineBreak:
  Enabled: true

Layout/FirstMethodArgumentLineBreak:
  Enabled: true

Layout/HeredocArgumentClosingParenthesis:
  Enabled: true

Layout/FirstArgumentIndentation:
  Enabled: true
  EnforcedStyle: consistent

Layout/FirstArrayElementIndentation:
  Enabled: true
  EnforcedStyle: consistent

Layout/FirstHashElementIndentation:
  Enabled: true
  EnforcedStyle: consistent

Layout/FirstParameterIndentation:
  Enabled: true
  EnforcedStyle: consistent

Layout/IndentationConsistency:
  Enabled: true

Layout/IndentationWidth:
  Enabled: true

Layout/LeadingCommentSpace:
  Enabled: true

Layout/MultilineArrayLineBreaks:
  Enabled: true

Layout/MultilineBlockLayout:
  Enabled: true

Layout/MultilineHashBraceLayout:
  Enabled: true

Layout/MultilineHashKeyLineBreaks:
  Enabled: true

Layout/MultilineMethodArgumentLineBreaks:
  Enabled: true

Layout/MultilineMethodCallBraceLayout:
  Enabled: true

Layout/MultilineMethodCallIndentation:
  Enabled: true
  EnforcedStyle: indented

Layout/MultilineOperationIndentation:
  Enabled: true

# This doesn't play nice with private_class_method.
Layout/RescueEnsureAlignment:
  Enabled: false

Layout/SpaceAfterComma:
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true

Layout/SpaceAroundOperators:
  Enabled: true

Layout/SpaceBeforeBlockBraces:
  Enabled: true

Layout/SpaceBeforeFirstArg:
  Enabled: false

Layout/SpaceInsideBlockBraces:
  Enabled: true
  EnforcedStyle: space

Layout/SpaceInsideHashLiteralBraces:
  Enabled: true
  EnforcedStyle: no_space

Layout/SpaceInLambdaLiteral:
  Enabled: true
  SupportedStyles:
    - require_no_space

# Enforce final new line.
Layout/TrailingEmptyLines:
  Enabled: true
  SupportedStyles:
    - final_newline

Layout/TrailingWhitespace:
  Enabled: true

######
# Lint
######

Lint/AmbiguousBlockAssociation:
  Enabled: true
  inherit_mode:
  # RSpec has a canonical syntax that violates this rule
  Exclude:
    - !ruby/regexp /_spec\.rb$/

Lint/AssignmentInCondition:
  Enabled: false

Lint/BigDecimalNew:
  Enabled: false

Lint/HeredocMethodCallPosition:
  Enabled: true

Lint/NestedMethodDefinition:
  Enabled: true
  # Sandbox uses Sinatra which is heavily uses nested methods
  Exclude:
    - !ruby/regexp /sandbox/dashboard/app/.*.rb/

Lint/ShadowingOuterLocalVariable:
  Enabled: false

Lint/UnusedMethodArgument:
  Enabled: false

#########
# Metrics
#########

Metrics/LineLength:
  Max: 100
  AutoCorrect: true
