#!/bin/bash

# Leverages FZF to let you find a local branch or pr
# using "fuzzy" searching.
#
# Usage git pick <branch|pr> [branch substring]
#   If you supply a branch substring it'll
#   restrict your results to branches that contain
#   that substring.
#   If there is only one, it will switch to it automatically
#
# The PR functionality assumes you've modified your
# git config so that you can checkout PRs locally
#
# [remote "origin"]
#    fetch = +refs/heads/*:refs/remotes/origin/*
#    url = git@github.com:joyent/node.git
#    fetch = +refs/pull/*/head:refs/remotes/origin/pr/*
#    # ^^^ that last line lets you `git checkout pr/1234`

if [ $1 = "branch" ]; then
  if [ $# -eq 2 ]; then
    lines=$(
    git branch -v \
      | grep -v " [[:xdigit:]]\{7\} \[gone\]" \
      | grep "$2"
    )
    line_count=$(echo -n "$lines" | grep -c '^')
    if [ "$lines" == "" ]; then
      echo "no branches contain $2"
      exit 0
    fi
    if [ $line_count -ne 1 ]; then
      branch=$(
        echo "$lines" \
        | fzf \
        | awk '{print $1}'
      )
    else
      branch=$(echo "$lines" | awk '{print $1}')
    fi

  else
    branch=$(git branch -v \
      | grep -v " [[:xdigit:]]\{7\} \[gone\]" \
      | fzf \
      | awk '{print $1}' )
  fi

  if [ "$branch" != "+" ]; then
    git checkout $branch
  else
    echo "That brach is checked out in another worktree."
    echo "For more info on worktrees go to:"
    echo "  https://git-scm.com/docs/git-worktree"
    exit 0
  fi

elif [ $1 = "pr" ]; then

  git branch -av \
    | grep "pr/[[:digit:]]" \
    | grep -v " [[:xdigit:]]\{7\} \[gone\]" \
    | perl -pe "s/remotes\/\S+?\///g" \
    | fzf \
    | awk '{print $1}' \
    | xargs git checkout

else
  echo "Unrecognized option"
  echo "Usage: git pick [branch|pr]"
  exit 1
fi


