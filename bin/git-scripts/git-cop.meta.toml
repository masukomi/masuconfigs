# the name of the command or function you're documenting
name="git-cop"
# a short (one line) description of what it does
short_description="a replacement for checkout that works with branch names copied from PRs"
description="""
"git cop" = "git checkout pr"

Useful on open source work, and teams where individual contributors
fork the central repo on GitHub.

In these scenarios when you click on the copy icon by the branch name
in GitHub what you get is prefaced with the username and
colon. For example a PR from my the downloads branch of my forked repo
would show up as `masukomi:downloads`

When I make a PR and the recepient wants to actually check out my
changes locally they can copy that and then, run `git cop <paste>`

NOTE: in order for this to work you'll have had to configure a remote
with a matching username. `git-cop` will warn you if you haven't.
"""
usage_command="git-cop"
# fallback_usage="""
# USAGE: fallback_usage is used when
# usage_command is not present"""

# is this an executable, function, or ???
type="executable"
# what language is it written in?
language="bash"
# where you can find this specific file in source control
source_url="https://github.com/masukomi/masuconfigs/blob/master/bin/git-scripts/git-cop"
# where you can find the repo that contains this file
source_repo_url="https://github.com/masukomi/masuconfigs"
tags=["git"]

# [[cheats]]
# [[cheats.bar]]
# description = "a description of task bar with backtrace_details"
# template="bar {{arg1}} {{arg2}}"
# [[cheats.baz]]
# description = "a description of task baz with backtrace_details"
# template="bar {{arg1}} {{arg2}}"
