#!/bin/zsh
# original version found here
#

# to see what's actually going on with lsof (List of Open Files)
# run this
# lsof -c Emacs | grep -E "COMMAND|server"

socket_file=$(lsof -c Emacs | grep server | tr -s " " | cut -d' ' -f8 | tail -n1)
# tail -n1 because you can sometimes get multiple lines back
# and the last one is going to be the one with the most recent PID

# executable paths handled by homebrew
# emacs=/Applications/Emacs.app/Contents/MacOS/Emacs
# emacsclient=/Applications/Emacs.app/Contents/MacOS/bin/emacsclient

# echo "socket file: $socket_file"

while getopts "nfdh" opt; do
  case ${opt} in
    n)
      NEW="true"
      ;;
    f)
      FORCE="true"
      ;;
    d)
      DEBUG="true"
      ;;
    h)
      echo "Usage: doom [-n|-f|-d] [path]"
      echo "     -n open a new window"
      echo "     -f force use of a new emacs server"
      echo "     -d debug (just shows emacs' output)"
      exit 0
      ;;
  esac
done
shift $((OPTIND -1))

if [[ $socket_file == "" ]] || [[ "$FORCE" == "true" ]]; then
  echo "starting Emacs server..."
  emacs --chdir $PWD --execute "(server-start)" $@ > /dev/null 2>&1 &
  disown
else
  echo "will use client"
  if [[ "$NEW" == "true" ]]; then
    echo "\t...with new frame"
    if [[ "$DEBUG" != "true" ]]; then
      emacsclient --create-frame -n $@ --socket-name $socket_file > /dev/null 2>&1
    else
      emacsclient --create-frame -n $@ --socket-name $socket_file
    fi
  else
    if [[ "$DEBUG" != "true" ]]; then
      emacsclient -n $@ --socket-name $socket_file > /dev/null 2>&1
    else
      emacsclient -n $@ --socket-name $socket_file
    fi
  fi

  if [ $? -ne 0 ]; then
    echo "ðŸ˜° um... that... didn't work. Sorry."
    exit 1
  fi
fi

