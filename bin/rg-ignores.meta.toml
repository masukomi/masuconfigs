# a template for `clu` toml files
# the name of the command or function you're documenting
name="rg-ignores"
# a short (one line) description of what it does
short_description="finds files that rg may be using to ignore patterns"
descirption="""
[rg](https://github.com/BurntSushi/ripgrep) is an incredible
replacement for grep, but sometimes it's too smart for my own good.

It intentionally ignores many types of files. For example, it'll
ignore and file or directory mentioned by your `.gitignore`.

This is useful when you _know_ something is there, but ripgrep isn't
finding it.

In these situations call `rg-ignores <search term>` instead of `rg`.

Mostly it exits because I can't remember the flags to make it stop
ignoring things.
"""
# if the tool has some sort of usage / help documentation you can
# invoke, enter it in the usage_command. Otherwise, comment that out,
# and document it in the fallback_usage. In TOML you can create a
# multiline string by surrounding it with triple double quotes.
# """ like this """
usage_command="rg-ignores"
# fallback_usage="""
# USAGE: fallback_usage is used when
# usage_command is not present"""

# is this an executable, function, or ???
type="executable"
# what language is it written in?
language="bash"
# where you can find this specific file in source control
source_url="https://github.com/masukomi/masuconfigs/blob/master/bin/rg-ignores"
# where you can find the repo that contains this file
source_repo_url="https://github.com/masukomi/masuconfigs"

# [[cheats]]
# [[cheats.bar]]
# description = "a description of task bar with backtrace_details"
# template="bar {{arg1}} {{arg2}}"
# [[cheats.baz]]
# description = "a description of task baz with backtrace_details"
# template="bar {{arg1}} {{arg2}}"
