#!/usr/bin/env ruby

if ARGV.size == 0
  puts "USAGE: template_commenter <path/to/starting/dir>
       adds comments to the start and end of all the
       .haml, .html, .rhtml, or .erb files it finds.
       Comments will make the start and end of each
       template file clear when viewing source on
       rendered pages."

  exit 0
end


start_directory = ARGV[0]
start_directory = "#{start_directory}/" unless start_directory[-1,1] == '/'

def colorize(text, color_code)
  "\e[#{color_code}m#{text}\e[0m"
end

def red(text); colorize(text, 31); end
def green(text); colorize(text, 32); end


def parse_directory(directory)
  Dir.foreach(directory) do |item|
    next if item == '.' or item == '..'
    # do work on real items

    start_content = "BEGIN #{directory}#{item}"
    end_content = "END #{directory}#{item}"

    if ! File.directory?("#{directory}#{item}")
      body = File.read("#{directory}#{item}")
      if item =~ /\.haml$/
        start_content = "/ #{start_content}\n"
        end_content   = "\n/ #{end_content}\n"
      elsif item =~ /\.r?html$|\.erb$/
        start_content = "<!-- #{start_content} -->\n"
        end_content = "\n<!-- #{end_content} -->\n"
      else
        puts red("skipping: #{item}... unsupported file type")
        next
      end
      puts green("adding comments to #{directory}#{item}")
      File.open("#{directory}/#{item}", "w") {|f|
        f.write start_content
        f.write body
        f.write end_content
      }
    else
      parse_directory("#{directory}#{item}/")
    end
  end
end

parse_directory(start_directory)
